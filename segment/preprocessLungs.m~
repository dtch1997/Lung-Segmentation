addpath(genpath('~/bbrister/lung_segmentation/lib/aimutil'))
addpath(genpath('~/bbrister/lung_segmentation/lib/cth_seg'))

rootDir = '/data/lidc';
dataDirName = 'LIDC-NIFTI/debug';
dataDir = fullfile(rootDir, dataDirName);

res = 1;

destDir = fullfile(rootDir, ['nodules-' num2str(res) 'mm']);
if ~exist(destDir, 'dir')
    mkdir(destDir)
end

wd = pwd;
cd(dataDir)
volFiles = sort(strsplit(ls('*volume*.nii.gz')))
cd(wd)

if isempty(volFiles{1})
    volFiles = volFiles(2:end);
end

for i = 1 : length(volFiles)
    
    % Get the corresponding mask name and ensure it exists
    volName = volFiles{i};
    maskName = regexprep(volName, 'volume', 'segmentation');
    maskPath = fullfile(dataDir, maskName);
    volPath = fullfile(dataDir, volName);
    if ~exist(maskPath, 'file')
        warning(['Cannot find file ' maskPath ' skipping this case...'])
        continue
    end
    
    % Check if the result was already written
    tag = [num2str(res) 'mm-'];
    resultVolPath = fullfile(destDir, [tag volName]);
    resultMaskPath = fullfile(destDir, [tag maskName]);
    
    if ~replace && exist(resultVolPath, 'file')
        warning(['File ' volPath ' previously processed, skipping this '...
            'case...'])
        continue
    end
    
    % Read the images
    [vol, units] = imRead3D(volPath);
    [mask, maskUnits] = imRead3D(maskPath);
    
    % Verify the mask
    if ~any(mask(:))
        warning(['Mask is empty for file ' maskPath ' skipping this '...
            'case...'])
        continue
    end
    
    % Check dimensions and units
    if ~isequal(size(vol), size(mask))
        warning(['Dimensions do not match for file ' maskPath ...
            ' skipping this case...'])
        continue
    end
    if norm(units - maskUnits) > 1E-3
        warning(['Units do not match for file ' maskPath ' proceeding '...
            'anyways...'])
    end
    % Crop and preprocess the image
    
    